workflow:
    rules:
        - if: $CI_COMMIT_TAG =~ /^RT-\d+.\d+.\d+$/
          when: always
        # CASE I => First pipeline will run and than merge will done
        - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "developer" &&
              $CI_PIPELINE_SOURCE == 'merge_request_event'
          when: always
        - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "developer" &&
              $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "uat"  &&
              $CI_PIPELINE_SOURCE == 'merge_request_event'
          when: always
        - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "uat" &&
              $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "pre-prod" &&
              $CI_PIPELINE_SOURCE == 'merge_request_event'
          when: always

        # CASE II => First Merge will be done than pipeline will start
        # - if: $CI_COMMIT_BRANCH == "pre-prod" || $CI_COMMIT_BRANCH == "uat"
        #   when: always

        # CASE III =>
        # - if: $CI_COMMIT_BRANCH == "pre-prod"  || $CI_COMMIT_BRANCH == "uat"
        # - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        
        

        
stages:
    # - build_test
    # - uploading_2_ec2
    - echo_hello
variables:
    EC2_ENDPOINT: ec2-3-94-163-66.compute-1.amazonaws.com


# building django app:
#     # only:
#     #     - master
#     stage: build_test
#     image: node:16-alpine
#     script: 
#         - npm install
#         - npm run build 
#         - npm install -g serve
#         - apk add curl
#         - serve -s build &
#         - sleep 10
#         - curl http://localhost:3000 | grep "React"
#     artifacts:
#         paths:
#             - "build" 

# uploading build to ec2:
#     # only:
#     #     - master
#     stage: uploading_2_ec2
#     image: alpine
#     before_script:
#         - chmod 400 $SSH_UBUNTU
#     script:
#         - apk update
#         - apk add openssh-client
#         - apk add openssh
#         - apk add rsync
#         - scp -i $SSH_UBUNTU -o StrictHostKeyChecking=no -r build/  ubuntu@$EC2_ENDPOINT:/var/www/html/
        # - rsync -au -e "ssh -i $SSH_UBUNTU" build ubuntu@$EC2_ENDPOINT:/var/www/html/build

echo hello:
    stage: echo_hello
    image: alpine
    script:
        - echo $CI_COMMIT_BRANCH
        - echo $CI_COMMIT_REF_NAME
        - echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME

